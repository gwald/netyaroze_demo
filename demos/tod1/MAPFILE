startup.o needed due to __main
symusr.o needed due to ResetGraph
stdef1.o needed due to _sys_ramsize
stdef2.o needed due to _sys_init_stacksize
stdef3.o needed due to _sys_init_sp
stdef4.o needed due to _sys_init_fp
stdef5.o needed due to _sys_init_gp
stdef6.o needed due to _sys_init_heapbase
stdef7.o needed due to _sys_init_heapsize
stdef8.o needed due to _sys_init_bss_flag
Allocating common padd: 4 at 0 main.o
Allocating common obj_area: 320 at 0 main.o
Allocating common WorldOT: 28 at 320 main.o
Allocating common bb0: 4 at 0 pad.o
Allocating common view: 20 at 350 main.o
Allocating common GpuPacketArea: 1c200 at 370 main.o
Allocating common bb1: 4 at 4 pad.o
Allocating common TmdP: 4 at 4 main.o
Allocating common OTTags: 8000 at 1c570 main.o
Allocating common StartFrameNo: 4 at 8 main.o
Allocating common TodP: 4 at c main.o
Allocating common obj_cparam: 7d0 at 24570 main.o
Allocating common pslt: 30 at 24d40 main.o
Allocating common objs: c at 24d70 main.o
Allocating common NumFrame: 4 at 10 main.o
Allocating common obj_coord: fa0 at 24d80 main.o
**FILES**

  main.o
00000000 00000a50 2** 4d .text
00000000 00000040 2** 4d .data
00000000 00000000 2** 4d .bss
00000000 00000014 2** 4d .scommon
00000000 00025d20 2** 4d COMMON

  objctl.o
00000a50 00000650 2** 4d .text
00000040 00000000 2** 4d .data
00000000 00000000 2** 4d .bss

  todanim.o
000010a0 00000d50 2** 4d .text
00000000 00000030 2** 4d .rdata
00000040 00000000 2** 4d .data
00000000 00000000 2** 4d .bss

  pad.o
00001df0 000001a0 2** 4d .text
00000040 00000000 2** 4d .data
00000000 00000000 2** 4d .bss
00000020 00000008 2** 4d .scommon

  startup.o
00001f90 000001c0 2** 4d .text
00000040 00000150 2** 4d .data
00000000 00000000 2** 4d .bss

  symusr.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000000 00000000 2** 4d .bss

  stdef1.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000000 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef2.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000010 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef3.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000020 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef4.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000030 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef5.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000040 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef6.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000050 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef7.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000060 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  stdef8.o
00002150 00000000 2** 4d .text
00000190 00000000 2** 4d .data
00000070 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

**GLOBAL SYMBOLS**

offset    section    offset   symbol
80045548  *ABS*      80045548 longjmp
80043790  *ABS*      80043790 putchar
80022524  *ABS*      80022524 GsSetLightMode
80023bcc  *ABS*      80023bcc GsScaleScreen
80015124  *ABS*      80015124 SsSeqSetRitardando
80043cb0  *ABS*      80043cb0 strcpy
000001ac  .text      000001ac __main
00000000  .scommon   00000000 padd
8002632c  *ABS*      8002632c KanjiFntOpen
8001b0f4  *ABS*      8001b0f4 SsUtGetVVol
80040274  *ABS*      80040274 log
80043314  *ABS*      80043314 bcmp
800411cc  *ABS*      800411cc sqrt
8004550c  *ABS*      8004550c setjmp
8004100c  *ABS*      8004100c cosh
8002663c  *ABS*      8002663c KanjiFntClose
8003e854  *ABS*      8003e854 __eqdf2
80027cb0  *ABS*      80027cb0 ResetGraph
80027404  *ABS*      80027404 GetTPage
80021920  *ABS*      80021920 GsSwapDispBuff
80042fe8  *ABS*      80042fe8 delete
8001ad88  *ABS*      8001ad88 SsUtPitchBend
80044518  *ABS*      80044518 printf
80092180  *ABS*      80092180 _fdata
80042df8  *ABS*      80042df8 LoadTest
000005b0  .text      000005b0 initTod
8004133c  *ABS*      8004133c sprintf2
80042e18  *ABS*      80042e18 Exec
80043120  *ABS*      80043120 StartRCnt
8003fb64  *ABS*      8003fb64 __divsf3
8002d718  *ABS*      8002d718 SetLightMatrix
80043008  *ABS*      80043008 _get_errno
800225b0  *ABS*      800225b0 GsSetFogParam
800137e8  *ABS*      800137e8 SsIsEos
80021ac0  *ABS*      80021ac0 GsSetLightMatrix
800436cc  *ABS*      800436cc memmove
00000000  .text      80090000 eprol
80022600  *ABS*      80022600 GsSetAmbient
8001a33c  *ABS*      8001a33c SsUtKeyOn
8003ea84  *ABS*      8003ea84 __gtdf2
800432f4  *ABS*      800432f4 atol
800133fc  *ABS*      800133fc SsSeqSetNext
8004ea28  *ABS*      8004ea28 math_errno
8003f5c0  *ABS*      8003f5c0 ceil
8003bf60  *ABS*      8003bf60 CdRead
00000634  .text      00000634 obj_interactive
8003f4e8  *ABS*      8003f4e8 floor
00002150  .text      80092150 _etext
80043484  *ABS*      80043484 gets
00000000  COMMON     00000000 obj_area
8004543c  *ABS*      8004543c bsearch
8009a310  *ABS*      8009a310 _gp
8002a9fc  *ABS*      8002a9fc Krom2RawAdd2
000003e4  .text      000003e4 TodRemoveObj
80043ab4  *ABS*      80043ab4 qsort
8002154c  *ABS*      8002154c GsSetDrawBuffOffset
80042fa8  *ABS*      80042fa8 format
800412fc  *ABS*      800412fc printf2
800235d8  *ABS*      800235d8 GsGetLs
80043420  *ABS*      80043420 getc
8002d528  *ABS*      8002d528 ApplyMatrixSV
80043698  *ABS*      80043698 memcpy
80063e30  *ABS*      80063e30 GsLIGHTWSMATRIX
8003e8a4  *ABS*      8003e8a4 __floatsidf
8003eb60  *ABS*      8003eb60 __ltdf2
80014f3c  *ABS*      80014f3c SsSeqReplay
8001a6e0  *ABS*      8001a6e0 SsUtKeyOff
80042860  *ABS*      80042860 _err_math
800433f0  *ABS*      800433f0 tolower
8002d134  *ABS*      8002d134 PopMatrix
80010754  *ABS*      80010754 malloc
000003f8  .text      000003f8 initLight
00000000  .text      00000000 TodInitObjTable
80040088  *ABS*      80040088 ldexp
80020f3c  *ABS*      80020f3c GsInitGraph
80092390  *ABS*      80092390 edata
800153c4  *ABS*      800153c4 SsSeqStop
80010ea0  *ABS*      80010ea0 SsSetMute
00000140  .text      00000140 ReadSecondPad
800203b4  *ABS*      800203b4 GsSortLine
80044368  *ABS*      80044368 strtoul
80042fc8  *ABS*      80042fc8 nextfile
80028724  *ABS*      80028724 PutDrawEnv
00000320  COMMON     00000320 WorldOT
80028374  *ABS*      80028374 LoadImage
00000000  .sdata     00000000 _sys_init_stacksize
8003c388  *ABS*      8003c388 CdPlay
80010cb4  *ABS*      80010cb4 SsGetMVol
80010ee0  *ABS*      80010ee0 SsSetMVol
80016310  *ABS*      80016310 SsUtGetReverbType
80063f0c  *ABS*      80063f0c GsIDMATRIX
8003fcb0  *ABS*      8003fcb0 __extendsfdf2
0000003c  .text      0000003c PadRead
8003df74  *ABS*      8003df74 __adddf3
80063f2c  *ABS*      80063f2c GsLSMATRIX
00000524  .text      00000524 initModelingData
80042f68  *ABS*      80042f68 lseek
80021f70  *ABS*      80021f70 GsSetProjection
000008b0  .text      000008b0 drawTod
80043394  *ABS*      80043394 bzero
800288fc  *ABS*      800288fc PutDispEnv
80021e80  *ABS*      80021e80 GsInit3D
80062d08  *ABS*      80062d08 PSDOFSY
800441a4  *ABS*      800441a4 strtol
00000000  .scommon   00000000 bb0
80042f28  *ABS*      80042f28 EnterCriticalSection
80010d34  *ABS*      80010d34 SsGetSerialAttr
80065954  *ABS*      80065954 GsLIGHT_MODE
80022a70  *ABS*      80022a70 GsGetWorkBase
80010fc4  *ABS*      80010fc4 SsSetSerialVol
8001f7e0  *ABS*      8001f7e0 GsInitFixBg16
80042fd8  *ABS*      80042fd8 rename
80043f68  *ABS*      80043f68 strrchr
800219d0  *ABS*      800219d0 GsSetOrign
8003f3e8  *ABS*      8003f3e8 __fixdfsi
800109f0  *ABS*      800109f0 calloc
80026a2c  *ABS*      80026a2c KanjiFntPrint
800428e8  *ABS*      800428e8 strtod
80021ef8  *ABS*      80021ef8 GsMapModelingData
80022b44  *ABS*      80022b44 GsSetRefView2
80063f74  *ABS*      80063f74 GsIDMATRIX2
80042f88  *ABS*      80042f88 write
800661e0  *ABS*      800661e0 PSDCNT
800428c8  *ABS*      800428c8 atof
8004096c  *ABS*      8004096c __ledf2
80043b70  *ABS*      80043b70 strcat
80062d04  *ABS*      80062d04 PSDOFSX
00000000  .sdata     00000000 _sys_init_fp
800b80e0  *ABS*      800b80e0 end
80025320  *ABS*      80025320 FntOpen
80023e58  *ABS*      80023e58 GsSortObject4
80040554  *ABS*      80040554 modf
8001626c  *ABS*      8001626c SsUtSetReverbType
800405fc  *ABS*      800405fc fmod
80040d9c  *ABS*      80040d9c cos
800283d8  *ABS*      800283d8 StoreImage
8003d72c  *ABS*      8003d72c SetVideoMode
8002843c  *ABS*      8002843c MoveImage
8004107c  *ABS*      8004107c tanh
00002150  .text      80092150 etext
800435fc  *ABS*      800435fc memchr
00000350  COMMON     00000350 view
00000000  .sdata     00000000 _sys_init_bss_flag
800151bc  *ABS*      800151bc SsSeqSetVol
80020628  *ABS*      80020628 GsSortBoxFill
00000000  .text      80090000 _ftext
00000000  .text      00000000 _start
00000370  COMMON     00000370 GpuPacketArea
80021de0  *ABS*      80021de0 GsDefDispBuff
80044018  *ABS*      80044018 strstr
80023314  *ABS*      80023314 GsGetLw
80040cc4  *ABS*      80040cc4 sin
80043b30  *ABS*      80043b30 rand
8003d960  *ABS*      8003d960 atan2
80042f78  *ABS*      80042f78 read
80043e00  *ABS*      80043e00 strncmp
00000000  .sdata     00000000 _sys_init_sp
00000200  .text      00000200 TodCreateNewObj
80040740  *ABS*      80040740 pow
80043e80  *ABS*      80043e80 strncpy
80040ed4  *ABS*      80040ed4 sinh
80026f04  *ABS*      80026f04 Krom2Tim
800404bc  *ABS*      800404bc log10
80042e28  *ABS*      80042e28 FlushCache
80063f4c  *ABS*      80063f4c GsWSMATRIX
8001095c  *ABS*      8001095c realloc
8002d4d8  *ABS*      8002d4d8 ApplyMatrix
8002527c  *ABS*      8002527c FntLoad
800217e8  *ABS*      800217e8 GsSetClip
80021f90  *ABS*      80021f90 GsSetFlatLight
80043360  *ABS*      80043360 bcopy
80044090  *ABS*      80044090 strtok
8003f108  *ABS*      8003f108 __negdf2
00000004  .scommon   00000004 bb1
8004364c  *ABS*      8004364c memcmp
00000000  .sdata     00000000 _sys_init_heapbase
800231b0  *ABS*      800231b0 GsSetView2
80043188  *ABS*      80043188 ResetRCnt
8003e468  *ABS*      8003e468 __divdf3
80043d8c  *ABS*      80043d8c strncat
8002e4c8  *ABS*      8002e4c8 RotMatrixZ
800280b0  *ABS*      800280b0 SetDispMask
8003e3a0  *ABS*      8003e3a0 _dbl_shift
80013654  *ABS*      80013654 SsSetTempo
8003c068  *ABS*      8003c068 CdReadSync
8003ecb4  *ABS*      8003ecb4 __muldf3
800139d4  *ABS*      800139d4 SsSeqClose
80042f38  *ABS*      80042f38 ExitCriticalSection
80062d0c  *ABS*      80062d0c GsLIOFF
00000000  .text      00000000 PadInit
80014c10  *ABS*      80014c10 SsSeqPause
8002cf70  *ABS*      8002cf70 ScaleMatrixL
8001012c  *ABS*      8001012c TestCard
00000004  .scommon   00000004 TmdP
8003c14c  *ABS*      8003c14c CdReadFile
80020520  *ABS*      80020520 GsSortGLine
80016340  *ABS*      80016340 SsUtReverbOff
800216f0  *ABS*      800216f0 GsSetOffset
80043738  *ABS*      80043738 memset
00000000  .text      00000000 main
800430e8  *ABS*      800430e8 GetRCnt
00000000  .data      00000a50 te_list
80043b60  *ABS*      80043b60 srand
0001c570  COMMON     0001c570 OTTags
8002cde0  *ABS*      8002cde0 ApplyMatrixLV
80043450  *ABS*      80043450 getchar
8003ff54  *ABS*      8003ff54 __truncdfsf2
80063eb0  *ABS*      80063eb0 GsDISPENV
8002665c  *ABS*      8002665c KanjiFntFlush
800282e0  *ABS*      800282e0 ClearImage
80014d64  *ABS*      80014d64 SsSeqPlay
8002153c  *ABS*      8002153c GsGetActiveBuff
00000008  .scommon   00000008 StartFrameNo
8003f1c4  *ABS*      8003f1c4 exp
80043764  *ABS*      80043764 putc
8003fe10  *ABS*      8003fe10 __mulsf3
800226a4  *ABS*      800226a4 GsSortOt
80043c4c  *ABS*      80043c4c strcmp
8003b198  *ABS*      8003b198 CdSearchFile
80040c3c  *ABS*      80040c3c tan
80063e54  *ABS*      80063e54 GsDRAWENV
80022a60  *ABS*      80022a60 GsSetWorkBase
00000000  .sdata     00000000 _sys_ramsize
800258fc  *ABS*      800258fc FntPrint
00000554  .text      00000554 TodSearchTMDByID
800238ac  *ABS*      800238ac GsGetLws
8003f0b8  *ABS*      8003f0b8 __nedf2
8003c2b4  *ABS*      8003c2b4 CdReadExec
80016438  *ABS*      80016438 SsUtSetReverbDelay
8001f4b8  *ABS*      8001f4b8 GsSortFixBg16
8003d754  *ABS*      8003d754 atan
80044be0  *ABS*      80044be0 sprintf
0000000c  .scommon   0000000c TodP
80043cf4  *ABS*      80043cf4 strcspn
8003dbf8  *ABS*      8003dbf8 asin
000000f0  .text      000000f0 ReadFirstPad
8003ccdc  *ABS*      8003ccdc VSyncCallback
80063d40  *ABS*      80063d40 GsOUT_PACKET_P
80010700  *ABS*      80010700 InitHeap
80016360  *ABS*      80016360 SsUtSetReverbFeedback
00000000  .text      00000000 TodSetFrame
8002264c  *ABS*      8002264c GsClearOt
8002c898  *ABS*      8002c898 CompMatrix
8002814c  *ABS*      8002814c DrawSync
800219e8  *ABS*      800219e8 GsInitCoordinate2
00024570  COMMON     00024570 obj_cparam
8002297c  *ABS*      8002297c GsGetTimInfo
80022628  *ABS*      80022628 GsDrawOt
800208c4  *ABS*      800208c4 GsSortSprite
8003ca68  *ABS*      8003ca68 VSync
800100c8  *ABS*      800100c8 GetPadBuf
8002def8  *ABS*      8002def8 RotMatrix
80062d10  *ABS*      80062d10 GsLMODE
00000120  .text      00000120 TodSearchObjByID
80021868  *ABS*      80021868 GsSetClip2D
8003d744  *ABS*      8003d744 GetVideoMode
800255d8  *ABS*      800255d8 FntFlush
00000000  .sdata     00000000 _sys_init_gp
80021400  *ABS*      80021400 GsSortClear
00024d40  COMMON     00024d40 pslt
80092390  *ABS*      80092390 _edata
8002d5b8  *ABS*      8002d5b8 ScaleMatrix
00024d70  COMMON     00024d70 objs
8002d094  *ABS*      8002d094 PushMatrix
800b80e0  *ABS*      800b80e0 _end
800661e4  *ABS*      800661e4 PSDIDX
8002c9f8  *ABS*      8002c9f8 MulMatrix0
800658c8  *ABS*      800658c8 GsTON
80062d14  *ABS*      80062d14 GsLIGNR
80042ff8  *ABS*      80042ff8 Krom2RawAdd
80063f9c  *ABS*      80063f9c CLIP2
80010c90  *ABS*      80010c90 SsGetMute
8002d588  *ABS*      8002d588 TransMatrix
00000118  .text      00000118 TodSetPacket
8002d2b8  *ABS*      8002d2b8 MulMatrix
8002c778  *ABS*      8002c778 gteMIMefunc
0000019c  .text      0000019c exit
80015d94  *ABS*      80015d94 SsVabTransfer
800155f4  *ABS*      800155f4 SsVabClose
800113e8  *ABS*      800113e8 SsSeqOpen
80016320  *ABS*      80016320 SsUtReverbOn
80020dc0  *ABS*      80020dc0 GsSortFastSprite
800431c0  *ABS*      800431c0 atoi
00000010  .scommon   00000010 NumFrame
8001b2b4  *ABS*      8001b2b4 SsUtAllKeyOff
80010f30  *ABS*      80010f30 SsSetSerialAttr
80063da8  *ABS*      80063da8 GsDISPON
80042fb8  *ABS*      80042fb8 firstfile
000002c0  .text      000002c0 initSystem
80043fb0  *ABS*      80043fb0 strspn
8001b180  *ABS*      8001b180 SsUtSetVVol
0000036c  .text      0000036c initView
80042e08  *ABS*      80042e08 Load
00024d80  COMMON     00024d80 obj_coord
80043d5c  *ABS*      80043d5c strlen
80015224  *ABS*      80015224 SsSeqGetVol
80042f58  *ABS*      80042f58 open
800135f4  *ABS*      800135f4 SsSeqSetAccelerando
800433c0  *ABS*      800433c0 toupper
8003e9a8  *ABS*      8003e9a8 __gedf2
8002e188  *ABS*      8002e188 RotMatrixX
8002dea8  *ABS*      8002dea8 TransposeMatrix
000000a4  .text      000000a4 drawObject
80014dd4  *ABS*      80014dd4 SsPlayBack
8001ae18  *ABS*      8001ae18 SsUtChangePitch
80043c18  *ABS*      80043c18 strchr
00000000  .sdata     00000000 _sys_init_heapsize
800274cc  *ABS*      800274cc GetClut
8003dd7c  *ABS*      8003dd7c acos
80021660  *ABS*      80021660 GsSetDrawBuffClip
8003f7a0  *ABS*      8003f7a0 hypot
8003f140  *ABS*      8003f140 __subdf3
80023cf4  *ABS*      80023cf4 GsLinkObject4
80092390  *ABS*      80092390 _fbss
8002e328  *ABS*      8002e328 RotMatrixY
80010dcc  *ABS*      80010dcc SsGetSerialVol
80042f98  *ABS*      80042f98 close
8004014c  *ABS*      8004014c frexp
8003f9bc  *ABS*      8003f9bc __addsf3
80066274  *ABS*      80066274 GsNDIV
80063d3c  *ABS*      80063d3c POSITION
80043ef8  *ABS*      80043ef8 strpbrk
80010924  *ABS*      80010924 free
80021a90  *ABS*      80021a90 GsSetLsMatrix
800163a0  *ABS*      800163a0 SsUtSetReverbDepth
**MEMORY CONFIGURATION**

name		origin   length   r_size   c_size    is    attributes
*default*       00000000 ffffffff 00000000 800b80e0 ()


**LINK EDITOR MEMORY MAP**

output   input     virtual
section  section   address    tsize


*ABS*             00000000     0     0 2**0 
LOAD c:/blackpsx/lib/libps.a
address
LOAD main.o
LOAD objctl.o
LOAD todanim.o
LOAD pad.o
LOAD c:/blackpsx/lib/libps.a
                  00000000 80100000 . =80100000

.text             80090000  2150     0 2**4 load alloc reloc contents 
                  80090000 00000000 _ftext =.
 from *(.init)
                  80090000 00000000 eprol =.
 from *(.text)
         .text    80090000   a50   a50 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  800905b0              initTod
                  80090634              obj_interactive
                  800903f8              initLight
                  80090524              initModelingData
                  800908b0              drawTod
                  80090000              main
                  800902c0              initSystem
                  8009036c              initView
                  800900a4              drawObject
         .text    80090a50   650   650 2**4  ecoff-littlemips objctl.o(overhead 4056 bytes)
                  80090e34              TodRemoveObj
                  80090a50              TodInitObjTable
                  80090c50              TodCreateNewObj
                  80090fa4              TodSearchTMDByID
                  80090b70              TodSearchObjByID
         .text    800910a0   d50   d50 2**4  ecoff-littlemips todanim.o(overhead 4056 bytes)
                  800910a0              TodSetFrame
                  800911b8              TodSetPacket
         .text    80091df0   1a0   1a0 2**4  ecoff-littlemips pad.o(overhead 4056 bytes)
                  80091f30              ReadSecondPad
                  80091e2c              PadRead
                  80091df0              PadInit
                  80091ee0              ReadFirstPad
         .text    80091f90   1c0   1c0 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
                  8009213c              __main
                  80091f90              _start
                  8009212c              exit
                  80092150 00002150 PROVIDE (__runtime_reloc_start, .)
 from *(.rel.sdata)
                  80092150 00002150 PROVIDE (__runtime_reloc_stop, .)
 from *(.fini)
                  80092150 00002150 etext =.
                  80092150 00002150 _etext =.
                  80092150 80092150 . =.

.rdata            80092150    30     0 2**4 load alloc reloc contents 
 from *(.rdata)
         .rdata   80092150    30    30 2**4  ecoff-littlemips todanim.o(overhead 4056 bytes)
                  80092180 80092180 _fdata =ALIGN(00000010)

.data             80092180   190     0 2**4 load alloc contents 
 from *(.data)
         .data    80092180    40    40 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80092180              te_list
         .data    800921c0   150   150 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
constructors:
                  80092310 8009a310 _gp =(ALIGN(00000010)+00008000)

.lit8    (no attached output section)
 from *(.lit8)

.lit4    (no attached output section)
 from *(.lit4)

.sdata            80092310    80     0 2**4 load alloc reloc contents 
 from *(.sdata)
         .sdata   80092310    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef1.o(overhead 4056 bytes)
                  80092310              _sys_ramsize
         .sdata   80092320    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef2.o(overhead 4056 bytes)
                  80092320              _sys_init_stacksize
         .sdata   80092330    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef3.o(overhead 4056 bytes)
                  80092330              _sys_init_sp
         .sdata   80092340    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef4.o(overhead 4056 bytes)
                  80092340              _sys_init_fp
         .sdata   80092350    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef5.o(overhead 4056 bytes)
                  80092350              _sys_init_gp
         .sdata   80092360    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef6.o(overhead 4056 bytes)
                  80092360              _sys_init_heapbase
         .sdata   80092370    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef7.o(overhead 4056 bytes)
                  80092370              _sys_init_heapsize
         .sdata   80092380    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef8.o(overhead 4056 bytes)
                  80092380              _sys_init_bss_flag
                  80092390 80092390 edata =.
                  80092390 80092390 _edata =.
                  80092390 80092390 _fbss =.

.sbss             80092390    28     0 2**4 alloc 
 from *(.sbss)
 from *(.scommon)
         .scommon 80092390    14    14 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80092390              padd
                  80092394              TmdP
                  80092398              StartFrameNo
                  8009239c              TodP
                  800923a0              NumFrame
         *fill*   800923a4     c 0000
         .scommon 800923b0     8     8 2**4  ecoff-littlemips pad.o(overhead 4056 bytes)
                  800923b0              bb0
                  800923b4              bb1

.bss              800923c0 25d20     0 2**4 alloc 
 from *(.bss)
 from *(COMMON)
         COMMON   800923c0 25d20 25d20 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  800923c0              obj_area
                  800926e0              WorldOT
                  80092710              view
                  80092730              GpuPacketArea
                  800ae930              OTTags
                  800b6930              obj_cparam
                  800b7100              pslt
                  800b7130              objs
                  800b7140              obj_coord
                  800b80e0 800b80e0 end =.
                  800b80e0 800b80e0 _end =.
OUTPUT(main ecoff-littlemips)
