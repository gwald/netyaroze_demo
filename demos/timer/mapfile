symusr.o needed due to GsGetTimInfo
startup.o needed due to exit
stdef1.o needed due to _sys_ramsize
stdef2.o needed due to _sys_init_stacksize
stdef3.o needed due to _sys_init_sp
stdef4.o needed due to _sys_init_fp
stdef5.o needed due to _sys_init_gp
stdef6.o needed due to _sys_init_heapbase
stdef7.o needed due to _sys_init_heapsize
stdef8.o needed due to _sys_init_bss_flag
Allocating common TheLights: 30 at 0 main.o
Allocating common AverageHsync: 4 at 0 timer.o
Allocating common HsyncRecord: f0 at 0 timer.o
Allocating common FireSpriteMovementSpeed: 4 at 0 main.o
Allocating common FireSprite: 24 at 30 main.o
Allocating common bb0: 4 at 4 main.o
Allocating common ArrayOfObjects: 36b0 at 60 main.o
Allocating common PredictedFrameRate: 4 at 4 timer.o
Allocating common FireSpriteDX: 4 at 8 main.o
Allocating common AutoTimerSortItOutFlag: 4 at 8 timer.o
Allocating common bb1: 4 at c main.o
Allocating common GameFrameRateStrategy: 4 at c timer.o
Allocating common ProjectionDistance: 4 at 10 main.o
Allocating common FireImageInfo: 1c at 3710 main.o
**FILES**

  2d1.o
00000000 00000d90 2** 4d .text
00000000 00000250 2** 4d .rdata
00000000 00000000 2** 4d .data
00000000 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  timer.o
00000d90 000007f0 2** 4d .text
00000250 00000110 2** 4d .rdata
00000000 00000000 2** 4d .data
00000010 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss
00000000 00000010 2** 4d .scommon
00049050 000000f0 2** 4d COMMON

  main.o
00001580 00001040 2** 4d .text
00000360 000001f0 2** 4d .rdata
00000000 00000000 2** 4d .data
00000020 00000020 2** 4d .sdata
00000000 00049050 2** 4d .bss
00049140 0000372c 2** 4d COMMON
00000010 00000014 2** 4d .scommon

  symusr.o
000025c0 00000000 2** 4d .text
00000000 00000000 2** 4d .data
00049050 00000000 2** 4d .bss

  startup.o
000025c0 000001c0 2** 4d .text
00000000 00000150 2** 4d .data
00049050 00000000 2** 4d .bss

  stdef1.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000040 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef2.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000050 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef3.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000060 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef4.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000070 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef5.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000080 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef6.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000090 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef7.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
000000a0 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

  stdef8.o
00002780 00000000 2** 4d .text
00000150 00000000 2** 4d .data
000000b0 00000010 2** 4d .sdata
00049050 00000000 2** 4d .bss

**GLOBAL SYMBOLS**

offset    section    offset   symbol
80045548  *ABS*      80045548 longjmp
80043790  *ABS*      80043790 putchar
80022524  *ABS*      80022524 GsSetLightMode
80023bcc  *ABS*      80023bcc GsScaleScreen
80015124  *ABS*      80015124 SsSeqSetRitardando
80043cb0  *ABS*      80043cb0 strcpy
000001ac  .text      000001ac __main
8002632c  *ABS*      8002632c KanjiFntOpen
8001b0f4  *ABS*      8001b0f4 SsUtGetVVol
80040274  *ABS*      80040274 log
80043314  *ABS*      80043314 bcmp
800411cc  *ABS*      800411cc sqrt
8004550c  *ABS*      8004550c setjmp
8004100c  *ABS*      8004100c cosh
8002663c  *ABS*      8002663c KanjiFntClose
8003e854  *ABS*      8003e854 __eqdf2
80027cb0  *ABS*      80027cb0 ResetGraph
80027404  *ABS*      80027404 GetTPage
80021920  *ABS*      80021920 GsSwapDispBuff
80042fe8  *ABS*      80042fe8 delete
8001ad88  *ABS*      8001ad88 SsUtPitchBend
80044518  *ABS*      80044518 printf
80142cd0  *ABS*      80142cd0 _fdata
80042df8  *ABS*      80042df8 LoadTest
8004133c  *ABS*      8004133c sprintf2
80042e18  *ABS*      80042e18 Exec
80043120  *ABS*      80043120 StartRCnt
8003fb64  *ABS*      8003fb64 __divsf3
8002d718  *ABS*      8002d718 SetLightMatrix
80043008  *ABS*      80043008 _get_errno
800225b0  *ABS*      800225b0 GsSetFogParam
800137e8  *ABS*      800137e8 SsIsEos
80021ac0  *ABS*      80021ac0 GsSetLightMatrix
800436cc  *ABS*      800436cc memmove
00000000  COMMON     00000000 TheLights
00000000  .text      80140000 eprol
80022600  *ABS*      80022600 GsSetAmbient
8001a33c  *ABS*      8001a33c SsUtKeyOn
8003ea84  *ABS*      8003ea84 __gtdf2
800432f4  *ABS*      800432f4 atol
800133fc  *ABS*      800133fc SsSeqSetNext
8004ea28  *ABS*      8004ea28 math_errno
8003f5c0  *ABS*      8003f5c0 ceil
8003bf60  *ABS*      8003bf60 CdRead
00000000  .scommon   00000000 AverageHsync
8003f4e8  *ABS*      8003f4e8 floor
00002780  .text      80142780 _etext
80043484  *ABS*      80043484 gets
8004543c  *ABS*      8004543c bsearch
8014ae20  *ABS*      8014ae20 _gp
8002a9fc  *ABS*      8002a9fc Krom2RawAdd2
80043ab4  *ABS*      80043ab4 qsort
8002154c  *ABS*      8002154c GsSetDrawBuffOffset
00000c88  .text      00000c88 GetTexturePageOfRectangle
80042fa8  *ABS*      80042fa8 format
800412fc  *ABS*      800412fc printf2
800235d8  *ABS*      800235d8 GsGetLs
80043420  *ABS*      80043420 getc
8002d528  *ABS*      8002d528 ApplyMatrixSV
80043698  *ABS*      80043698 memcpy
80063e30  *ABS*      80063e30 GsLIGHTWSMATRIX
8003e8a4  *ABS*      8003e8a4 __floatsidf
8003eb60  *ABS*      8003eb60 __ltdf2
00000204  .text      00000204 HandleGameTiming
80014f3c  *ABS*      80014f3c SsSeqReplay
8001a6e0  *ABS*      8001a6e0 SsUtKeyOff
80042860  *ABS*      80042860 _err_math
800433f0  *ABS*      800433f0 tolower
00000a8c  .text      00000a8c SortObjectPosition
8002d134  *ABS*      8002d134 PopMatrix
000000e4  .text      000000e4 ProperInitialiseTexture
80010754  *ABS*      80010754 malloc
80040088  *ABS*      80040088 ldexp
80020f3c  *ABS*      80020f3c GsInitGraph
80142ee0  *ABS*      80142ee0 edata
800153c4  *ABS*      800153c4 SsSeqStop
00000504  .text      00000504 SetStrategyByHsyncMeasure
80010ea0  *ABS*      80010ea0 SsSetMute
800203b4  *ABS*      800203b4 GsSortLine
80044368  *ABS*      80044368 strtoul
80042fc8  *ABS*      80042fc8 nextfile
80028724  *ABS*      80028724 PutDrawEnv
80028374  *ABS*      80028374 LoadImage
00000c40  .text      00000c40 BringAliveAnotherObject
00000000  .sdata     00000000 _sys_init_stacksize
8003c388  *ABS*      8003c388 CdPlay
80010cb4  *ABS*      80010cb4 SsGetMVol
80010ee0  *ABS*      80010ee0 SsSetMVol
80016310  *ABS*      80016310 SsUtGetReverbType
00000894  .text      00000894 Get32TPageNumber
80063f0c  *ABS*      80063f0c GsIDMATRIX
8003fcb0  *ABS*      8003fcb0 __extendsfdf2
00000b90  .text      00000b90 PadRead
00000000  COMMON     00000000 HsyncRecord
8003df74  *ABS*      8003df74 __adddf3
00000000  .scommon   00000000 FireSpriteMovementSpeed
00000030  COMMON     00000030 FireSprite
80063f2c  *ABS*      80063f2c GsLSMATRIX
00000000  .text      00000000 InitialiseTimer
80042f68  *ABS*      80042f68 lseek
80021f70  *ABS*      80021f70 GsSetProjection
80043394  *ABS*      80043394 bzero
800288fc  *ABS*      800288fc PutDispEnv
80021e80  *ABS*      80021e80 GsInit3D
80062d08  *ABS*      80062d08 PSDOFSY
800441a4  *ABS*      800441a4 strtol
00000004  .scommon   00000004 bb0
00000060  COMMON     00000060 ArrayOfObjects
00000000  .sdata     00001230 NumberOfObjects
80042f28  *ABS*      80042f28 EnterCriticalSection
80010d34  *ABS*      80010d34 SsGetSerialAttr
80065954  *ABS*      80065954 GsLIGHT_MODE
80022a70  *ABS*      80022a70 GsGetWorkBase
80010fc4  *ABS*      80010fc4 SsSetSerialVol
8001f7e0  *ABS*      8001f7e0 GsInitFixBg16
80042fd8  *ABS*      80042fd8 rename
80043f68  *ABS*      80043f68 strrchr
800219d0  *ABS*      800219d0 GsSetOrign
8003f3e8  *ABS*      8003f3e8 __fixdfsi
800109f0  *ABS*      800109f0 calloc
80026a2c  *ABS*      80026a2c KanjiFntPrint
800428e8  *ABS*      800428e8 strtod
80021ef8  *ABS*      80021ef8 GsMapModelingData
80022b44  *ABS*      80022b44 GsSetRefView2
80063f74  *ABS*      80063f74 GsIDMATRIX2
80042f88  *ABS*      80042f88 write
800661e0  *ABS*      800661e0 PSDCNT
800428c8  *ABS*      800428c8 atof
8004096c  *ABS*      8004096c __ledf2
00000004  .scommon   00000004 PredictedFrameRate
80043b70  *ABS*      80043b70 strcat
80062d04  *ABS*      80062d04 PSDOFSX
00000140  .text      00000140 GetGameFrameRateStrategy
00000000  .sdata     00000000 _sys_init_fp
8018f77c  *ABS*      8018f77c end
80025320  *ABS*      80025320 FntOpen
80023e58  *ABS*      80023e58 GsSortObject4
0000016c  .text      0000016c GetStringDescribingFrameRateStrategy
80040554  *ABS*      80040554 modf
8001626c  *ABS*      8001626c SsUtSetReverbType
800405fc  *ABS*      800405fc fmod
80040d9c  *ABS*      80040d9c cos
800283d8  *ABS*      800283d8 StoreImage
8003d72c  *ABS*      8003d72c SetVideoMode
8002843c  *ABS*      8002843c MoveImage
8004107c  *ABS*      8004107c tanh
00002780  .text      80142780 etext
800435fc  *ABS*      800435fc memchr
00000000  .sdata     00000000 _sys_init_bss_flag
000009f8  .text      000009f8 FindTopLeftOfTexturePage
800151bc  *ABS*      800151bc SsSeqSetVol
80020628  *ABS*      80020628 GsSortBoxFill
00000000  .text      80140000 _ftext
00000000  .text      00000000 _start
80021de0  *ABS*      80021de0 GsDefDispBuff
80044018  *ABS*      80044018 strstr
00000008  .scommon   00000008 FireSpriteDX
80023314  *ABS*      80023314 GsGetLw
00000b70  .text      00000b70 GetTexturePage
80040cc4  *ABS*      80040cc4 sin
80043b30  *ABS*      80043b30 rand
8003d960  *ABS*      8003d960 atan2
80042f78  *ABS*      80042f78 read
80043e00  *ABS*      80043e00 strncmp
00000000  .sdata     00000000 _sys_init_sp
00000dfc  .text      00000dfc SetUpTheSprite
00000008  .scommon   00000008 AutoTimerSortItOutFlag
80040740  *ABS*      80040740 pow
80043e80  *ABS*      80043e80 strncpy
80040ed4  *ABS*      80040ed4 sinh
00000004  .sdata     00001234 frameNumber
80026f04  *ABS*      80026f04 Krom2Tim
800404bc  *ABS*      800404bc log10
000007d8  .text      000007d8 SetUpTheArrayOfObjects
0000056c  .text      0000056c LinkSpriteToImageInfo
80042e28  *ABS*      80042e28 FlushCache
80063f4c  *ABS*      80063f4c GsWSMATRIX
8001095c  *ABS*      8001095c realloc
8002d4d8  *ABS*      8002d4d8 ApplyMatrix
8002527c  *ABS*      8002527c FntLoad
00000584  .text      00000584 InitialiseAll
800217e8  *ABS*      800217e8 GsSetClip
80021f90  *ABS*      80021f90 GsSetFlatLight
80043360  *ABS*      80043360 bcopy
80044090  *ABS*      80044090 strtok
8003f108  *ABS*      8003f108 __negdf2
0000000c  .scommon   0000000c bb1
8004364c  *ABS*      8004364c memcmp
00000000  .sdata     00000000 _sys_init_heapbase
800231b0  *ABS*      800231b0 GsSetView2
80043188  *ABS*      80043188 ResetRCnt
8003e468  *ABS*      8003e468 __divdf3
80043d8c  *ABS*      80043d8c strncat
8002e4c8  *ABS*      8002e4c8 RotMatrixZ
800280b0  *ABS*      800280b0 SetDispMask
8003e3a0  *ABS*      8003e3a0 _dbl_shift
80013654  *ABS*      80013654 SsSetTempo
8003c068  *ABS*      8003c068 CdReadSync
8003ecb4  *ABS*      8003ecb4 __muldf3
800139d4  *ABS*      800139d4 SsSeqClose
80042f38  *ABS*      80042f38 ExitCriticalSection
80062d0c  *ABS*      80062d0c GsLIOFF
00000b58  .text      00000b58 PadInit
80014c10  *ABS*      80014c10 SsSeqPause
8002cf70  *ABS*      8002cf70 ScaleMatrixL
8001012c  *ABS*      8001012c TestCard
8003c14c  *ABS*      8003c14c CdReadFile
80020520  *ABS*      80020520 GsSortGLine
80016340  *ABS*      80016340 SsUtReverbOff
800216f0  *ABS*      800216f0 GsSetOffset
80043738  *ABS*      80043738 memset
00000000  .text      00000000 main
800430e8  *ABS*      800430e8 GetRCnt
80043b60  *ABS*      80043b60 srand
8002cde0  *ABS*      8002cde0 ApplyMatrixLV
80043450  *ABS*      80043450 getchar
8003ff54  *ABS*      8003ff54 __truncdfsf2
80063eb0  *ABS*      80063eb0 GsDISPENV
8002665c  *ABS*      8002665c KanjiFntFlush
0000079c  .text      0000079c InitGsSprite
800282e0  *ABS*      800282e0 ClearImage
80014d64  *ABS*      80014d64 SsSeqPlay
8002153c  *ABS*      8002153c GsGetActiveBuff
00000000  .text      00000000 InitialiseTexture
8003f1c4  *ABS*      8003f1c4 exp
0000000c  .scommon   0000000c GameFrameRateStrategy
80043764  *ABS*      80043764 putc
8003fe10  *ABS*      8003fe10 __mulsf3
800226a4  *ABS*      800226a4 GsSortOt
80043c4c  *ABS*      80043c4c strcmp
8003b198  *ABS*      8003b198 CdSearchFile
00000010  .scommon   00000010 ProjectionDistance
80040c3c  *ABS*      80040c3c tan
80063e54  *ABS*      80063e54 GsDRAWENV
80022a60  *ABS*      80022a60 GsSetWorkBase
00000000  .sdata     00000000 _sys_ramsize
800258fc  *ABS*      800258fc FntPrint
800238ac  *ABS*      800238ac GsGetLws
8003f0b8  *ABS*      8003f0b8 __nedf2
8003c2b4  *ABS*      8003c2b4 CdReadExec
80016438  *ABS*      80016438 SsUtSetReverbDelay
8001f4b8  *ABS*      8001f4b8 GsSortFixBg16
000005fc  .text      000005fc PredictFrameRateByHSyncMeasure
8003d754  *ABS*      8003d754 atan
80044be0  *ABS*      80044be0 sprintf
80043cf4  *ABS*      80043cf4 strcspn
8003dbf8  *ABS*      8003dbf8 asin
8003ccdc  *ABS*      8003ccdc VSyncCallback
80063d40  *ABS*      80063d40 GsOUT_PACKET_P
80010700  *ABS*      80010700 InitHeap
80016360  *ABS*      80016360 SsUtSetReverbFeedback
8002264c  *ABS*      8002264c GsClearOt
8002c898  *ABS*      8002c898 CompMatrix
8002814c  *ABS*      8002814c DrawSync
800219e8  *ABS*      800219e8 GsInitCoordinate2
8002297c  *ABS*      8002297c GsGetTimInfo
80022628  *ABS*      80022628 GsDrawOt
800208c4  *ABS*      800208c4 GsSortSprite
8003ca68  *ABS*      8003ca68 VSync
800100c8  *ABS*      800100c8 GetPadBuf
8002def8  *ABS*      8002def8 RotMatrix
80062d10  *ABS*      80062d10 GsLMODE
80021868  *ABS*      80021868 GsSetClip2D
8003d744  *ABS*      8003d744 GetVideoMode
800255d8  *ABS*      800255d8 FntFlush
00000000  .sdata     00000000 _sys_init_gp
80021400  *ABS*      80021400 GsSortClear
80142ee0  *ABS*      80142ee0 _edata
8002d5b8  *ABS*      8002d5b8 ScaleMatrix
8018f77c  *ABS*      8018f77c _end
8002d094  *ABS*      8002d094 PushMatrix
800661e4  *ABS*      800661e4 PSDIDX
8002c9f8  *ABS*      8002c9f8 MulMatrix0
00000d1c  .text      00000d1c KillOffAnObject
800658c8  *ABS*      800658c8 GsTON
00003710  COMMON     00003710 FireImageInfo
80062d14  *ABS*      80062d14 GsLIGNR
80042ff8  *ABS*      80042ff8 Krom2RawAdd
80063f9c  *ABS*      80063f9c CLIP2
80010c90  *ABS*      80010c90 SsGetMute
8002d588  *ABS*      8002d588 TransMatrix
8002d2b8  *ABS*      8002d2b8 MulMatrix
8002c778  *ABS*      8002c778 gteMIMefunc
0000019c  .text      0000019c exit
80015d94  *ABS*      80015d94 SsVabTransfer
800155f4  *ABS*      800155f4 SsVabClose
800113e8  *ABS*      800113e8 SsSeqOpen
80016320  *ABS*      80016320 SsUtReverbOn
80020dc0  *ABS*      80020dc0 GsSortFastSprite
800431c0  *ABS*      800431c0 atoi
8001b2b4  *ABS*      8001b2b4 SsUtAllKeyOff
80010f30  *ABS*      80010f30 SsSetSerialAttr
80063da8  *ABS*      80063da8 GsDISPON
80042fb8  *ABS*      80042fb8 firstfile
80043fb0  *ABS*      80043fb0 strspn
8001b180  *ABS*      8001b180 SsUtSetVVol
80042e08  *ABS*      80042e08 Load
80043d5c  *ABS*      80043d5c strlen
80015224  *ABS*      80015224 SsSeqGetVol
80042f58  *ABS*      80042f58 open
800135f4  *ABS*      800135f4 SsSeqSetAccelerando
800433c0  *ABS*      800433c0 toupper
8003e9a8  *ABS*      8003e9a8 __gedf2
8002e188  *ABS*      8002e188 RotMatrixX
8002dea8  *ABS*      8002dea8 TransposeMatrix
80014dd4  *ABS*      80014dd4 SsPlayBack
8001ae18  *ABS*      8001ae18 SsUtChangePitch
80043c18  *ABS*      80043c18 strchr
00000000  .sdata     00000000 _sys_init_heapsize
800274cc  *ABS*      800274cc GetClut
8003dd7c  *ABS*      8003dd7c acos
80021660  *ABS*      80021660 GsSetDrawBuffClip
00000b00  .text      00000b00 SortObjectScaling
8003f7a0  *ABS*      8003f7a0 hypot
8003f140  *ABS*      8003f140 __subdf3
80023cf4  *ABS*      80023cf4 GsLinkObject4
80142ee0  *ABS*      80142ee0 _fbss
8002e328  *ABS*      8002e328 RotMatrixY
80010dcc  *ABS*      80010dcc SsGetSerialVol
80042f98  *ABS*      80042f98 close
8004014c  *ABS*      8004014c frexp
8003f9bc  *ABS*      8003f9bc __addsf3
00000e78  .text      00000e78 HandleTheFireSprite
80066274  *ABS*      80066274 GsNDIV
0000021c  .text      0000021c ForceTextureIntoPosition
00000364  .text      00000364 DealWithControllerPad
80063d3c  *ABS*      80063d3c POSITION
80043ef8  *ABS*      80043ef8 strpbrk
000000b8  .text      000000b8 SetGameFrameRateStrategy
80010924  *ABS*      80010924 free
000009bc  .text      000009bc UpdateObjectCoordinates
80021a90  *ABS*      80021a90 GsSetLsMatrix
800163a0  *ABS*      800163a0 SsUtSetReverbDepth
**MEMORY CONFIGURATION**

name		origin   length   r_size   c_size    is    attributes
*default*       00000000 ffffffff 00000000 8018f77c ()


**LINK EDITOR MEMORY MAP**

output   input     virtual
section  section   address    tsize


*ABS*             00000000     0     0 2**0 
LOAD c:/blackpsx/lib/libps.a
address
LOAD 2d1.o
LOAD timer.o
LOAD main.o
LOAD c:/blackpsx/lib/libps.a
                  00000000 80100000 . =80100000

.text             80140000  2780     0 2**4 load alloc reloc contents 
                  80140000 00000000 _ftext =.
 from *(.init)
                  80140000 00000000 eprol =.
 from *(.text)
         .text    80140000   d90   d90 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
                  80140c88              GetTexturePageOfRectangle
                  801400e4              ProperInitialiseTexture
                  80140894              Get32TPageNumber
                  801409f8              FindTopLeftOfTexturePage
                  80140b70              GetTexturePage
                  8014056c              LinkSpriteToImageInfo
                  8014079c              InitGsSprite
                  80140000              InitialiseTexture
                  8014021c              ForceTextureIntoPosition
         .text    80140d90   7f0   7f0 2**4  ecoff-littlemips timer.o(overhead 4056 bytes)
                  80140f94              HandleGameTiming
                  80141294              SetStrategyByHsyncMeasure
                  80140d90              InitialiseTimer
                  80140ed0              GetGameFrameRateStrategy
                  80140efc              GetStringDescribingFrameRateStrategy
                  8014138c              PredictFrameRateByHSyncMeasure
                  80140e48              SetGameFrameRateStrategy
         .text    80141580  1040  1040 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  8014200c              SortObjectPosition
                  801421c0              BringAliveAnotherObject
                  80142110              PadRead
                  8014237c              SetUpTheSprite
                  80141d58              SetUpTheArrayOfObjects
                  80141b04              InitialiseAll
                  801420d8              PadInit
                  80141580              main
                  8014229c              KillOffAnObject
                  80142080              SortObjectScaling
                  801423f8              HandleTheFireSprite
                  801418e4              DealWithControllerPad
                  80141f3c              UpdateObjectCoordinates
         .text    801425c0   1c0   1c0 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
                  8014276c              __main
                  801425c0              _start
                  8014275c              exit
                  80142780 00002780 PROVIDE (__runtime_reloc_start, .)
 from *(.rel.sdata)
                  80142780 00002780 PROVIDE (__runtime_reloc_stop, .)
 from *(.fini)
                  80142780 00002780 etext =.
                  80142780 00002780 _etext =.
                  80142780 80142780 . =.

.rdata            80142780   550     0 2**4 load alloc contents 
 from *(.rdata)
         .rdata   80142780   250   250 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
         .rdata   801429d0   110   110 2**4  ecoff-littlemips timer.o(overhead 4056 bytes)
         .rdata   80142ae0   1f0   1f0 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80142cd0 80142cd0 _fdata =ALIGN(00000010)

.data             80142cd0   150     0 2**4 load alloc contents 
 from *(.data)
         .data    80142cd0   150   150 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
constructors:
                  80142e20 8014ae20 _gp =(ALIGN(00000010)+00008000)

.lit8    (no attached output section)
 from *(.lit8)

.lit4    (no attached output section)
 from *(.lit4)

.sdata            80142e20    c0     0 2**4 load alloc reloc contents 
 from *(.sdata)
         .sdata   80142e20    10    10 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
         .sdata   80142e30    10    10 2**4  ecoff-littlemips timer.o(overhead 4056 bytes)
         .sdata   80142e40    20    20 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80142e40              NumberOfObjects
                  80142e44              frameNumber
         .sdata   80142e60    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef1.o(overhead 4056 bytes)
                  80142e60              _sys_ramsize
         .sdata   80142e70    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef2.o(overhead 4056 bytes)
                  80142e70              _sys_init_stacksize
         .sdata   80142e80    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef3.o(overhead 4056 bytes)
                  80142e80              _sys_init_sp
         .sdata   80142e90    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef4.o(overhead 4056 bytes)
                  80142e90              _sys_init_fp
         .sdata   80142ea0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef5.o(overhead 4056 bytes)
                  80142ea0              _sys_init_gp
         .sdata   80142eb0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef6.o(overhead 4056 bytes)
                  80142eb0              _sys_init_heapbase
         .sdata   80142ec0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef7.o(overhead 4056 bytes)
                  80142ec0              _sys_init_heapsize
         .sdata   80142ed0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef8.o(overhead 4056 bytes)
                  80142ed0              _sys_init_bss_flag
                  80142ee0 80142ee0 edata =.
                  80142ee0 80142ee0 _edata =.
                  80142ee0 80142ee0 _fbss =.

.sbss             80142ee0    24     0 2**4 alloc 
 from *(.sbss)
 from *(.scommon)
         .scommon 80142ee0    10    10 2**4  ecoff-littlemips timer.o(overhead 4056 bytes)
                  80142ee0              AverageHsync
                  80142ee4              PredictedFrameRate
                  80142ee8              AutoTimerSortItOutFlag
                  80142eec              GameFrameRateStrategy
         .scommon 80142ef0    14    14 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80142ef0              FireSpriteMovementSpeed
                  80142ef4              bb0
                  80142ef8              FireSpriteDX
                  80142efc              bb1
                  80142f00              ProjectionDistance

.bss              80142f10 4c86c     0 2**4 alloc 
 from *(.bss)
         .bss     80142f10 49050 49050 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
 from *(COMMON)
         COMMON   8018bf60    f0    f0 2**4  ecoff-littlemips timer.o(overhead 4056 bytes)
                  8018bf60              HsyncRecord
         COMMON   8018c050  372c  372c 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  8018c050              TheLights
                  8018c080              FireSprite
                  8018c0b0              ArrayOfObjects
                  8018f760              FireImageInfo
                  8018f77c 8018f77c end =.
                  8018f77c 8018f77c _end =.
OUTPUT(main ecoff-littlemips)
