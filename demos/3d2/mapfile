symusr.o needed due to GetPadBuf
startup.o needed due to exit
stdef1.o needed due to _sys_ramsize
stdef2.o needed due to _sys_init_stacksize
stdef3.o needed due to _sys_init_sp
stdef4.o needed due to _sys_init_fp
stdef5.o needed due to _sys_init_gp
stdef6.o needed due to _sys_init_heapbase
stdef7.o needed due to _sys_init_heapsize
stdef8.o needed due to _sys_init_bss_flag
Allocating common TheLights: 30 at 0 main.o
Allocating common AllStrings: 5a0 at 0 text_str.o
Allocating common NumberOfStrings: 4 at 0 text_str.o
Allocating common bb0: 4 at 0 pad.o
Allocating common TheView: 20 at 30 main.o
Allocating common onlyNthBitOffMask: 4 at 0 main.o
Allocating common bb1: 4 at 4 pad.o
Allocating common onlyNthBitOn: 4 at 4 main.o
Allocating common NumberSprites: 168 at 5a0 text_str.o
Allocating common OverallLightMode: 4 at 8 main.o
Allocating common ProjectionDistance: 4 at c main.o
Allocating common AsciiTextureInfo: 1c at 710 text_str.o
Allocating common TheCubes: 1590 at 50 main.o
Allocating common TheSquares: 1590 at 15e0 main.o
Allocating common TheFogging: c at 2b70 main.o
Allocating common ObjectArray: 1000 at 0 object.o
Allocating common LetterSprites: 3a8 at 730 text_str.o
Allocating common FireTextureInfo: 1c at 2b80 main.o
**FILES**

  pad.o
00000000 000000f0 2** 4d .text
00000000 00000000 2** 4d .data
00000000 00000000 2** 4d .bss
00000010 00000008 2** 4d .scommon

  rand.o
000000f0 00000060 2** 4d .text
00000000 00000010 2** 4d .rdata
00000000 00000000 2** 4d .data
00000000 00000000 2** 4d .bss

  2d1.o
00000150 000006b0 2** 4d .text
00000010 00000060 2** 4d .rdata
00000000 00000000 2** 4d .data
00000000 00000010 2** 4d .sdata
00000000 00000000 2** 4d .bss

  text_str.o
00000800 00000a60 2** 4d .text
00000070 00000130 2** 4d .rdata
00000000 00000000 2** 4d .data
00000000 00000000 2** 4d .bss
00019390 00000ad8 2** 4d COMMON
00000020 00000004 2** 4d .scommon

  sound.o
00001260 00000080 2** 4d .text
00000000 00000000 2** 4d .data
00000000 00000010 2** 4d .sbss
00000000 00000360 2** 4d .bss

  tmd.o
000012e0 00000150 2** 4d .text
000001a0 00000070 2** 4d .rdata
00000000 00000000 2** 4d .data
00000010 00000010 2** 4d .sdata
00000360 00000000 2** 4d .bss

  object.o
00001430 000012c0 2** 4d .text
00000210 000001f0 2** 4d .rdata
00000000 00000000 2** 4d .data
00000360 00000000 2** 4d .bss
00019e70 00001000 2** 4d COMMON

  main.o
000026f0 00002160 2** 4d .text
00000400 00000210 2** 4d .rdata
00000000 00000000 2** 4d .data
00000020 00000020 2** 4d .sdata
00000360 00019030 2** 4d .bss
0001ae70 00002b9c 2** 4d COMMON
00000030 00000010 2** 4d .scommon

  symusr.o
00004850 00000000 2** 4d .text
00000000 00000000 2** 4d .data
00019390 00000000 2** 4d .bss

  startup.o
00004850 000001c0 2** 4d .text
00000000 00000150 2** 4d .data
00019390 00000000 2** 4d .bss

  stdef1.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000040 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef2.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000050 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef3.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000060 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef4.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000070 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef5.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000080 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef6.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
00000090 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef7.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
000000a0 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

  stdef8.o
00004a10 00000000 2** 4d .text
00000150 00000000 2** 4d .data
000000b0 00000010 2** 4d .sdata
00019390 00000000 2** 4d .bss

**GLOBAL SYMBOLS**

offset    section    offset   symbol
80045548  *ABS*      80045548 longjmp
000000c8  .text      000000c8 CountNumberOfObjectsInTmdFile
80043790  *ABS*      80043790 putchar
80022524  *ABS*      80022524 GsSetLightMode
80023bcc  *ABS*      80023bcc GsScaleScreen
80015124  *ABS*      80015124 SsSeqSetRitardando
80043cb0  *ABS*      80043cb0 strcpy
000001ac  .text      000001ac __main
8002632c  *ABS*      8002632c KanjiFntOpen
8001b0f4  *ABS*      8001b0f4 SsUtGetVVol
80040274  *ABS*      80040274 log
80043314  *ABS*      80043314 bcmp
800411cc  *ABS*      800411cc sqrt
00000064  .text      00000064 CleanUpSound
8004550c  *ABS*      8004550c setjmp
8004100c  *ABS*      8004100c cosh
8002663c  *ABS*      8002663c KanjiFntClose
8003e854  *ABS*      8003e854 __eqdf2
80027cb0  *ABS*      80027cb0 ResetGraph
80027404  *ABS*      80027404 GetTPage
80021920  *ABS*      80021920 GsSwapDispBuff
0000088c  .text      0000088c KillAnObject
80042fe8  *ABS*      80042fe8 delete
8001ad88  *ABS*      8001ad88 SsUtPitchBend
80044518  *ABS*      80044518 printf
80145020  *ABS*      80145020 _fdata
80042df8  *ABS*      80042df8 LoadTest
8004133c  *ABS*      8004133c sprintf2
80042e18  *ABS*      80042e18 Exec
80043120  *ABS*      80043120 StartRCnt
00001668  .text      00001668 CheckCollisions
8003fb64  *ABS*      8003fb64 __divsf3
8002d718  *ABS*      8002d718 SetLightMatrix
80043008  *ABS*      80043008 _get_errno
800225b0  *ABS*      800225b0 GsSetFogParam
800137e8  *ABS*      800137e8 SsIsEos
80021ac0  *ABS*      80021ac0 GsSetLightMatrix
000004c8  .text      000004c8 DisplayTextStrings
00001244  .text      00001244 SortObjectSize
800436cc  *ABS*      800436cc memmove
00000000  .text      00000000 InitialiseSound
00000000  COMMON     00000000 TheLights
00000000  .text      80140000 eprol
80022600  *ABS*      80022600 GsSetAmbient
8001a33c  *ABS*      8001a33c SsUtKeyOn
8003ea84  *ABS*      8003ea84 __gtdf2
800432f4  *ABS*      800432f4 atol
800133fc  *ABS*      800133fc SsSeqSetNext
8004ea28  *ABS*      8004ea28 math_errno
8003f5c0  *ABS*      8003f5c0 ceil
8003bf60  *ABS*      8003bf60 CdRead
8003f4e8  *ABS*      8003f4e8 floor
0000077c  .text      0000077c InitialiseView
00004a10  .text      80144a10 _etext
80043484  *ABS*      80043484 gets
8004543c  *ABS*      8004543c bsearch
8014d170  *ABS*      8014d170 _gp
8002a9fc  *ABS*      8002a9fc Krom2RawAdd2
00000674  .text      00000674 GetSpriteForCharacter
80043ab4  *ABS*      80043ab4 qsort
8002154c  *ABS*      8002154c GsSetDrawBuffOffset
80042fa8  *ABS*      80042fa8 format
800412fc  *ABS*      800412fc printf2
800235d8  *ABS*      800235d8 GsGetLs
80043420  *ABS*      80043420 getc
8002d528  *ABS*      8002d528 ApplyMatrixSV
80043698  *ABS*      80043698 memcpy
000012c4  .text      000012c4 HandleAllObjects
00000078  .text      00000078 FindNextLowestObjectID
00000000  COMMON     00000000 AllStrings
80063e30  *ABS*      80063e30 GsLIGHTWSMATRIX
8003e8a4  *ABS*      8003e8a4 __floatsidf
8003eb60  *ABS*      8003eb60 __ltdf2
00001480  .text      00001480 HandleACube
00000000  .scommon   00000000 NumberOfStrings
80014f3c  *ABS*      80014f3c SsSeqReplay
8001a6e0  *ABS*      8001a6e0 SsUtKeyOff
80042860  *ABS*      80042860 _err_math
800433f0  *ABS*      800433f0 tolower
8002d134  *ABS*      8002d134 PopMatrix
000000e4  .text      000000e4 ProperInitialiseTexture
80010754  *ABS*      80010754 malloc
80040088  *ABS*      80040088 ldexp
80020f3c  *ABS*      80020f3c GsInitGraph
80145230  *ABS*      80145230 edata
800153c4  *ABS*      800153c4 SsSeqStop
80010ea0  *ABS*      80010ea0 SsSetMute
800203b4  *ABS*      800203b4 GsSortLine
80044368  *ABS*      80044368 strtoul
80042fc8  *ABS*      80042fc8 nextfile
80028724  *ABS*      80028724 PutDrawEnv
80028374  *ABS*      80028374 LoadImage
00000228  .text      00000228 FindNextUnusedObjectID
00000000  .sdata     00000000 _sys_init_stacksize
8003c388  *ABS*      8003c388 CdPlay
80010cb4  *ABS*      80010cb4 SsGetMVol
00000038  .text      00000038 TurnOnSound
80010ee0  *ABS*      80010ee0 SsSetMVol
80016310  *ABS*      80016310 SsUtGetReverbType
80063f0c  *ABS*      80063f0c GsIDMATRIX
8003fcb0  *ABS*      8003fcb0 __extendsfdf2
00000038  .text      00000038 PadRead
8003df74  *ABS*      8003df74 __adddf3
80063f2c  *ABS*      80063f2c GsLSMATRIX
80042f68  *ABS*      80042f68 lseek
80021f70  *ABS*      80021f70 GsSetProjection
80043394  *ABS*      80043394 bzero
800288fc  *ABS*      800288fc PutDispEnv
80021e80  *ABS*      80021e80 GsInit3D
80062d08  *ABS*      80062d08 PSDOFSY
800441a4  *ABS*      800441a4 strtol
00000000  .scommon   00000000 bb0
80042f28  *ABS*      80042f28 EnterCriticalSection
80010d34  *ABS*      80010d34 SsGetSerialAttr
80065954  *ABS*      80065954 GsLIGHT_MODE
00001d64  .text      00001d64 SortSpriteObjectPosition
80022a70  *ABS*      80022a70 GsGetWorkBase
80010fc4  *ABS*      80010fc4 SsSetSerialVol
8001f7e0  *ABS*      8001f7e0 GsInitFixBg16
80042fd8  *ABS*      80042fd8 rename
80043f68  *ABS*      80043f68 strrchr
800219d0  *ABS*      800219d0 GsSetOrign
8003f3e8  *ABS*      8003f3e8 __fixdfsi
800109f0  *ABS*      800109f0 calloc
80026a2c  *ABS*      80026a2c KanjiFntPrint
800428e8  *ABS*      800428e8 strtod
80021ef8  *ABS*      80021ef8 GsMapModelingData
80022b44  *ABS*      80022b44 GsSetRefView2
80063f74  *ABS*      80063f74 GsIDMATRIX2
80042f88  *ABS*      80042f88 write
00000b50  .text      00000b50 InitSingleObject
800661e0  *ABS*      800661e0 PSDCNT
800428c8  *ABS*      800428c8 atof
00001c84  .text      00001c84 UpdateObjectCoordinates2
8004096c  *ABS*      8004096c __ledf2
80043b70  *ABS*      80043b70 strcat
00000000  .text      00000000 InitialiseTextStrings
00000814  .text      00000814 BringObjectToLife
80062d04  *ABS*      80062d04 PSDOFSX
00000000  .sdata     00000000 _sys_init_fp
00000f50  .text      00000f50 ReviveObject
80162c7c  *ABS*      80162c7c end
80025320  *ABS*      80025320 FntOpen
80023e58  *ABS*      80023e58 GsSortObject4
00000030  COMMON     00000030 TheView
80040554  *ABS*      80040554 modf
8001626c  *ABS*      8001626c SsUtSetReverbType
800405fc  *ABS*      800405fc fmod
80040d9c  *ABS*      80040d9c cos
800283d8  *ABS*      800283d8 StoreImage
8003d72c  *ABS*      8003d72c SetVideoMode
8002843c  *ABS*      8002843c MoveImage
8004107c  *ABS*      8004107c tanh
00004a10  .text      80144a10 etext
800435fc  *ABS*      800435fc memchr
00000000  .sdata     00000000 _sys_init_bss_flag
00000534  .text      00000534 FindTopLeftOfTexturePage
800151bc  *ABS*      800151bc SsSeqSetVol
80020628  *ABS*      80020628 GsSortBoxFill
00000000  .text      80140000 _ftext
00000000  .text      00000000 _start
80021de0  *ABS*      80021de0 GsDefDispBuff
80044018  *ABS*      80044018 strstr
80023314  *ABS*      80023314 GsGetLw
80040cc4  *ABS*      80040cc4 sin
80043b30  *ABS*      80043b30 rand
000006a8  .text      000006a8 LinkAllObjectsToTheirCoordinateSystems
8003d960  *ABS*      8003d960 atan2
80042f78  *ABS*      80042f78 read
80043e00  *ABS*      80043e00 strncmp
00000000  .scommon   00000000 onlyNthBitOffMask
00000000  .sdata     00000000 _sys_init_sp
80040740  *ABS*      80040740 pow
80043e80  *ABS*      80043e80 strncpy
80040ed4  *ABS*      80040ed4 sinh
0000000c  .sdata     0000237c frameNumber
80026f04  *ABS*      80026f04 Krom2Tim
800404bc  *ABS*      800404bc log10
0000021c  .text      0000021c LinkSpriteToImageInfo
80042e28  *ABS*      80042e28 FlushCache
80063f4c  *ABS*      80063f4c GsWSMATRIX
8001095c  *ABS*      8001095c realloc
8002d4d8  *ABS*      8002d4d8 ApplyMatrix
8002527c  *ABS*      8002527c FntLoad
000004e8  .text      000004e8 InitialiseAll
800217e8  *ABS*      800217e8 GsSetClip
80021f90  *ABS*      80021f90 GsSetFlatLight
80043360  *ABS*      80043360 bcopy
00000810  .text      00000810 RegisterTextStringForDisplay
80044090  *ABS*      80044090 strtok
8003f108  *ABS*      8003f108 __negdf2
00000004  .scommon   00000004 bb1
00000004  .scommon   00000004 onlyNthBitOn
8004364c  *ABS*      8004364c memcmp
00000000  .sdata     00000000 _sys_init_heapbase
800231b0  *ABS*      800231b0 GsSetView2
80043188  *ABS*      80043188 ResetRCnt
8003e468  *ABS*      8003e468 __divdf3
80043d8c  *ABS*      80043d8c strncat
8002e4c8  *ABS*      8002e4c8 RotMatrixZ
800280b0  *ABS*      800280b0 SetDispMask
8003e3a0  *ABS*      8003e3a0 _dbl_shift
80013654  *ABS*      80013654 SsSetTempo
8003c068  *ABS*      8003c068 CdReadSync
8003ecb4  *ABS*      8003ecb4 __muldf3
800139d4  *ABS*      800139d4 SsSeqClose
80042f38  *ABS*      80042f38 ExitCriticalSection
80062d0c  *ABS*      80062d0c GsLIOFF
00000000  .text      00000000 PadInit
80014c10  *ABS*      80014c10 SsSeqPause
00000b5c  .text      00000b5c CleanupAndExit
8002cf70  *ABS*      8002cf70 ScaleMatrixL
8001012c  *ABS*      8001012c TestCard
8003c14c  *ABS*      8003c14c CdReadFile
80020520  *ABS*      80020520 GsSortGLine
80016340  *ABS*      80016340 SsUtReverbOff
800216f0  *ABS*      800216f0 GsSetOffset
00000000  .text      00000000 InitialiseObjectClass
80043738  *ABS*      80043738 memset
00000000  .text      00000000 main
800430e8  *ABS*      800430e8 GetRCnt
000005a0  COMMON     000005a0 NumberSprites
80043b60  *ABS*      80043b60 srand
8002cde0  *ABS*      8002cde0 ApplyMatrixLV
80043450  *ABS*      80043450 getchar
8003ff54  *ABS*      8003ff54 __truncdfsf2
80063eb0  *ABS*      80063eb0 GsDISPENV
8002665c  *ABS*      8002665c KanjiFntFlush
00000a20  .text      00000a20 RemoveObjectFromObjectArray
0000043c  .text      0000043c InitGsSprite
800282e0  *ABS*      800282e0 ClearImage
0000001c  .text      0000001c HandleSound
80014d64  *ABS*      80014d64 SsSeqPlay
8002153c  *ABS*      8002153c GsGetActiveBuff
00000000  .text      00000000 InitialiseTexture
000004e0  .text      000004e0 LinkAllObjectsToModelsOrSprites
8003f1c4  *ABS*      8003f1c4 exp
80043764  *ABS*      80043764 putc
00000008  .scommon   00000008 OverallLightMode
8003fe10  *ABS*      8003fe10 __mulsf3
800226a4  *ABS*      800226a4 GsSortOt
80043c4c  *ABS*      80043c4c strcmp
8003b198  *ABS*      8003b198 CdSearchFile
0000000c  .scommon   0000000c ProjectionDistance
00002144  .text      00002144 StoreScreen
80040c3c  *ABS*      80040c3c tan
80063e54  *ABS*      80063e54 GsDRAWENV
80022a60  *ABS*      80022a60 GsSetWorkBase
00000000  .sdata     00000000 _sys_ramsize
800258fc  *ABS*      800258fc FntPrint
800238ac  *ABS*      800238ac GsGetLws
8003f0b8  *ABS*      8003f0b8 __nedf2
8003c2b4  *ABS*      8003c2b4 CdReadExec
80016438  *ABS*      80016438 SsUtSetReverbDelay
8001f4b8  *ABS*      8001f4b8 GsSortFixBg16
00000008  .sdata     00002378 QuitFlag
8003d754  *ABS*      8003d754 atan
80044be0  *ABS*      80044be0 sprintf
80043cf4  *ABS*      80043cf4 strcspn
8003dbf8  *ABS*      8003dbf8 asin
8003ccdc  *ABS*      8003ccdc VSyncCallback
00000000  .sdata     00002370 ScreenWidth
80063d40  *ABS*      80063d40 GsOUT_PACKET_P
80010700  *ABS*      80010700 InitHeap
80016360  *ABS*      80016360 SsUtSetReverbFeedback
8002264c  *ABS*      8002264c GsClearOt
8002c898  *ABS*      8002c898 CompMatrix
8002814c  *ABS*      8002814c DrawSync
00000710  COMMON     00000710 AsciiTextureInfo
800219e8  *ABS*      800219e8 GsInitCoordinate2
8002297c  *ABS*      8002297c GsGetTimInfo
80022628  *ABS*      80022628 GsDrawOt
800208c4  *ABS*      800208c4 GsSortSprite
8003ca68  *ABS*      8003ca68 VSync
800100c8  *ABS*      800100c8 GetPadBuf
00000050  COMMON     00000050 TheCubes
000015e0  COMMON     000015e0 TheSquares
8002def8  *ABS*      8002def8 RotMatrix
80062d10  *ABS*      80062d10 GsLMODE
80021868  *ABS*      80021868 GsSetClip2D
8003d744  *ABS*      8003d744 GetVideoMode
800255d8  *ABS*      800255d8 FntFlush
00000000  .sdata     00000000 _sys_init_gp
000008b8  .text      000008b8 RegisterObjectIntoObjectArray
80021400  *ABS*      80021400 GsSortClear
80145230  *ABS*      80145230 _edata
00002b70  COMMON     00002b70 TheFogging
8002d5b8  *ABS*      8002d5b8 ScaleMatrix
000002f4  .text      000002f4 CountNumberOfLivingObjects
80162c7c  *ABS*      80162c7c _end
8002d094  *ABS*      8002d094 PushMatrix
800661e4  *ABS*      800661e4 PSDIDX
8002c9f8  *ABS*      8002c9f8 MulMatrix0
800658c8  *ABS*      800658c8 GsTON
80062d14  *ABS*      80062d14 GsLIGNR
80042ff8  *ABS*      80042ff8 Krom2RawAdd
80063f9c  *ABS*      80063f9c CLIP2
80010c90  *ABS*      80010c90 SsGetMute
0000080c  .text      0000080c InitialiseObjects
00000000  COMMON     00000000 ObjectArray
8002d588  *ABS*      8002d588 TransMatrix
00000150  .text      00000150 FindNextHighestObjectID
8002d2b8  *ABS*      8002d2b8 MulMatrix
8002c778  *ABS*      8002c778 gteMIMefunc
0000019c  .text      0000019c exit
80015d94  *ABS*      80015d94 SsVabTransfer
800155f4  *ABS*      800155f4 SsVabClose
000011dc  .text      000011dc SetObjectScaling
800113e8  *ABS*      800113e8 SsSeqOpen
80016320  *ABS*      80016320 SsUtReverbOn
80020dc0  *ABS*      80020dc0 GsSortFastSprite
800431c0  *ABS*      800431c0 atoi
8001b2b4  *ABS*      8001b2b4 SsUtAllKeyOff
80010f30  *ABS*      80010f30 SsSetSerialAttr
80063da8  *ABS*      80063da8 GsDISPON
80042fb8  *ABS*      80042fb8 firstfile
80043fb0  *ABS*      80043fb0 strspn
000015d0  .text      000015d0 HandleASquare
8001b180  *ABS*      8001b180 SsUtSetVVol
80042e08  *ABS*      80042e08 Load
80043d5c  *ABS*      80043d5c strlen
80015224  *ABS*      80015224 SsSeqGetVol
80042f58  *ABS*      80042f58 open
800135f4  *ABS*      800135f4 SsSeqSetAccelerando
800433c0  *ABS*      800433c0 toupper
8003e9a8  *ABS*      8003e9a8 __gedf2
8002e188  *ABS*      8002e188 RotMatrixX
8002dea8  *ABS*      8002dea8 TransposeMatrix
80014dd4  *ABS*      80014dd4 SsPlayBack
8001ae18  *ABS*      8001ae18 SsUtChangePitch
80043c18  *ABS*      80043c18 strchr
00000000  .sdata     00000000 _sys_init_heapsize
800274cc  *ABS*      800274cc GetClut
0000193c  .text      0000193c ObjectsVeryClose
00000004  .sdata     00002374 ScreenHeight
8003dd7c  *ABS*      8003dd7c acos
80021660  *ABS*      80021660 GsSetDrawBuffClip
8003f7a0  *ABS*      8003f7a0 hypot
00000730  COMMON     00000730 LetterSprites
8003f140  *ABS*      8003f140 __subdf3
80023cf4  *ABS*      80023cf4 GsLinkObject4
0000061c  .text      0000061c InitialiseLighting
80145230  *ABS*      80145230 _fbss
8002e328  *ABS*      8002e328 RotMatrixY
80010dcc  *ABS*      80010dcc SsGetSerialVol
00000000  .text      00000000 LinkObjectHandlerToTmdObject
80042f98  *ABS*      80042f98 close
8004014c  *ABS*      8004014c frexp
8003f9bc  *ABS*      8003f9bc __addsf3
00000000  .text      00000000 InitialiseRandomNumbers
00002b80  COMMON     00002b80 FireTextureInfo
80066274  *ABS*      80066274 GsNDIV
00000b94  .text      00000b94 DealWithControllerPad
80063d3c  *ABS*      80063d3c POSITION
80043ef8  *ABS*      80043ef8 strpbrk
80010924  *ABS*      80010924 free
000003cc  .text      000003cc CountNumberOfLivingTypedObjects
00001a10  .text      00001a10 UpdateObjectCoordinates
80021a90  *ABS*      80021a90 GsSetLsMatrix
800163a0  *ABS*      800163a0 SsUtSetReverbDepth
**MEMORY CONFIGURATION**

name		origin   length   r_size   c_size    is    attributes
*default*       00000000 ffffffff 00000000 80162c7c ()


**LINK EDITOR MEMORY MAP**

output   input     virtual
section  section   address    tsize


*ABS*             00000000     0     0 2**0 
LOAD c:/blackpsx/lib/libps.a
address
LOAD pad.o
LOAD rand.o
LOAD 2d1.o
LOAD text_str.o
LOAD sound.o
LOAD tmd.o
LOAD object.o
LOAD main.o
LOAD c:/blackpsx/lib/libps.a
                  00000000 80100000 . =80100000

.text             80140000  4a10     0 2**4 load alloc reloc contents 
                  80140000 00000000 _ftext =.
 from *(.init)
                  80140000 00000000 eprol =.
 from *(.text)
         .text    80140000    f0    f0 2**4  ecoff-littlemips pad.o(overhead 4056 bytes)
                  80140038              PadRead
                  80140000              PadInit
         .text    801400f0    60    60 2**4  ecoff-littlemips rand.o(overhead 4056 bytes)
                  801400f0              InitialiseRandomNumbers
         .text    80140150   6b0   6b0 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
                  80140234              ProperInitialiseTexture
                  80140684              FindTopLeftOfTexturePage
                  8014036c              LinkSpriteToImageInfo
                  8014058c              InitGsSprite
                  80140150              InitialiseTexture
         .text    80140800   a60   a60 2**4  ecoff-littlemips text_str.o(overhead 4056 bytes)
                  80140cc8              DisplayTextStrings
                  80140e74              GetSpriteForCharacter
                  80140800              InitialiseTextStrings
                  80141010              RegisterTextStringForDisplay
         .text    80141260    80    80 2**4  ecoff-littlemips sound.o(overhead 4056 bytes)
                  801412c4              CleanUpSound
                  80141260              InitialiseSound
                  80141298              TurnOnSound
                  8014127c              HandleSound
         .text    801412e0   150   150 2**4  ecoff-littlemips tmd.o(overhead 4056 bytes)
                  801413a8              CountNumberOfObjectsInTmdFile
                  801412e0              LinkObjectHandlerToTmdObject
         .text    80141430  12c0  12c0 2**4  ecoff-littlemips object.o(overhead 4056 bytes)
                  80141cbc              KillAnObject
                  80142674              SortObjectSize
                  801414a8              FindNextLowestObjectID
                  80141658              FindNextUnusedObjectID
                  80141f80              InitSingleObject
                  80141c44              BringObjectToLife
                  80142380              ReviveObject
                  80141ad8              LinkAllObjectsToTheirCoordinateSystems
                  80141430              InitialiseObjectClass
                  80141e50              RemoveObjectFromObjectArray
                  80141910              LinkAllObjectsToModelsOrSprites
                  80141ce8              RegisterObjectIntoObjectArray
                  80141724              CountNumberOfLivingObjects
                  80141580              FindNextHighestObjectID
                  8014260c              SetObjectScaling
                  801417fc              CountNumberOfLivingTypedObjects
         .text    801426f0  2160  2160 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80143d58              CheckCollisions
                  80142e6c              InitialiseView
                  801439b4              HandleAllObjects
                  80143b70              HandleACube
                  80144454              SortSpriteObjectPosition
                  80144374              UpdateObjectCoordinates2
                  80142bd8              InitialiseAll
                  8014324c              CleanupAndExit
                  801426f0              main
                  80144834              StoreScreen
                  80142efc              InitialiseObjects
                  80143cc0              HandleASquare
                  8014402c              ObjectsVeryClose
                  80142d0c              InitialiseLighting
                  80143284              DealWithControllerPad
                  80144100              UpdateObjectCoordinates
         .text    80144850   1c0   1c0 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
                  801449fc              __main
                  80144850              _start
                  801449ec              exit
                  80144a10 00004a10 PROVIDE (__runtime_reloc_start, .)
 from *(.rel.sdata)
                  80144a10 00004a10 PROVIDE (__runtime_reloc_stop, .)
 from *(.fini)
                  80144a10 00004a10 etext =.
                  80144a10 00004a10 _etext =.
                  80144a10 80144a10 . =.

.rdata            80144a10   610     0 2**4 load alloc contents 
 from *(.rdata)
         .rdata   80144a10    10    10 2**4  ecoff-littlemips rand.o(overhead 4056 bytes)
         .rdata   80144a20    60    60 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
         .rdata   80144a80   130   130 2**4  ecoff-littlemips text_str.o(overhead 4056 bytes)
         .rdata   80144bb0    70    70 2**4  ecoff-littlemips tmd.o(overhead 4056 bytes)
         .rdata   80144c20   1f0   1f0 2**4  ecoff-littlemips object.o(overhead 4056 bytes)
         .rdata   80144e10   210   210 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80145020 80145020 _fdata =ALIGN(00000010)

.data             80145020   150     0 2**4 load alloc contents 
 from *(.data)
         .data    80145020   150   150 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]startup.o(overhead 4056 bytes)
constructors:
                  80145170 8014d170 _gp =(ALIGN(00000010)+00008000)

.lit8    (no attached output section)
 from *(.lit8)

.lit4    (no attached output section)
 from *(.lit4)

.sdata            80145170    c0     0 2**4 load alloc reloc contents 
 from *(.sdata)
         .sdata   80145170    10    10 2**4  ecoff-littlemips 2d1.o(overhead 4056 bytes)
         .sdata   80145180    10    10 2**4  ecoff-littlemips tmd.o(overhead 4056 bytes)
         .sdata   80145190    20    20 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  8014519c              frameNumber
                  80145198              QuitFlag
                  80145190              ScreenWidth
                  80145194              ScreenHeight
         .sdata   801451b0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef1.o(overhead 4056 bytes)
                  801451b0              _sys_ramsize
         .sdata   801451c0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef2.o(overhead 4056 bytes)
                  801451c0              _sys_init_stacksize
         .sdata   801451d0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef3.o(overhead 4056 bytes)
                  801451d0              _sys_init_sp
         .sdata   801451e0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef4.o(overhead 4056 bytes)
                  801451e0              _sys_init_fp
         .sdata   801451f0    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef5.o(overhead 4056 bytes)
                  801451f0              _sys_init_gp
         .sdata   80145200    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef6.o(overhead 4056 bytes)
                  80145200              _sys_init_heapbase
         .sdata   80145210    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef7.o(overhead 4056 bytes)
                  80145210              _sys_init_heapsize
         .sdata   80145220    10    10 2**4  ecoff-littlemips [c:/blackpsx/lib/libps.a]stdef8.o(overhead 4056 bytes)
                  80145220              _sys_init_bss_flag
                  80145230 80145230 edata =.
                  80145230 80145230 _edata =.
                  80145230 80145230 _fbss =.

.sbss             80145230    40     0 2**4 alloc 
 from *(.sbss)
         .sbss    80145230    10    10 2**4  ecoff-littlemips sound.o(overhead 4056 bytes)
 from *(.scommon)
         .scommon 80145240     8     8 2**4  ecoff-littlemips pad.o(overhead 4056 bytes)
                  80145240              bb0
                  80145244              bb1
         *fill*   80145248     8 0000
         .scommon 80145250     4     4 2**4  ecoff-littlemips text_str.o(overhead 4056 bytes)
                  80145250              NumberOfStrings
         *fill*   80145254     c 0000
         .scommon 80145260    10    10 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  80145260              onlyNthBitOffMask
                  80145264              onlyNthBitOn
                  80145268              OverallLightMode
                  8014526c              ProjectionDistance

.bss              80145270 1da0c     0 2**4 alloc 
 from *(.bss)
         .bss     80145270   360   360 2**4  ecoff-littlemips sound.o(overhead 4056 bytes)
         .bss     801455d0 19030 19030 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
 from *(COMMON)
         COMMON   8015e600   ad8   ad8 2**4  ecoff-littlemips text_str.o(overhead 4056 bytes)
                  8015e600              AllStrings
                  8015eba0              NumberSprites
                  8015ed10              AsciiTextureInfo
                  8015ed30              LetterSprites
         *fill*   8015f0d8     8 0000
         COMMON   8015f0e0  1000  1000 2**4  ecoff-littlemips object.o(overhead 4056 bytes)
                  8015f0e0              ObjectArray
         COMMON   801600e0  2b9c  2b9c 2**4  ecoff-littlemips main.o(overhead 4056 bytes)
                  801600e0              TheLights
                  80160110              TheView
                  80160130              TheCubes
                  801616c0              TheSquares
                  80162c50              TheFogging
                  80162c60              FireTextureInfo
                  80162c7c 80162c7c end =.
                  80162c7c 80162c7c _end =.
OUTPUT(main ecoff-littlemips)
